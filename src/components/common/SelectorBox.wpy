<style scoped lang="less">
@import "../../styles/base";

.selector-box{
  flex: 1;
  max-width: 42%;
  border: 1rpx solid #A0AFBA;
  height: 60rpx;
  border-radius: 4rpx;
  .fj();
  padding: 0 20rpx;
  .sc(24rpx, #999);
  min-width: 0;

  &.small{
    .fz(16rpx);
  }
  &-bd{
    flex: 1;
    height: 100%;

    picker{
      line-height: 60rpx;
      .sc(24rpx, #999);
      white-space: nowrap;
    }
  }
  image{
    .wl(20rpx, 20rpx);
  }
}</style>

<template>
  <view class="selector-box search-from-item">
    <view class="selector-box-bd">
      <picker wx:if="{{isCommon}}" @change="handleChange" range="{{options}}" value="{{pickerValue}}"
              range-key="label">
        {{options[pickerValue].label}}
      </picker>
      <picker wx:else mode="date" @change="handleDateChange" @cancel="doSearchAllDate">
        {{value || datePlaceholder}}
      </picker>
    </view>
    <image src="../../images/arrow-down.png"></image>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class Placeholder extends wepy.component {
  props = {
    value: {
      type: [String, Number],
      default: '',
      twoWay: true
    },
    mode: {
      type: String,
      default: 'select'
    },
    options: {
      type: Array,
      default: () => [],
      twoWay: true
    },
    datePlaceholder: {
      type: String,
      default: '全部日期'
    }
  };

  data = {
    pickerValue: 0
  };

  computed = {
    isCommon() {
      return this.mode === 'select'
    }
  };

  methods = {
    handleChange(evt) {
      // console.log(evt.detail.value, this.pickerValue);
      this.pickerValue = evt.detail.value
      this.value = this.options[this.pickerValue].value
      this.$apply()
      this.$emit('change')
    },
    handleDateChange(evt) {
      this.value = evt.detail.value
      this.$apply()
      this.$emit('change')
    },
    doSearchAllDate(evt) {
      this.value = ''
      this.$apply()
      this.$emit('change')
    }
  };

  events = {};

  onLoad() {
    if(this.isCommon) {
      this.pickerValue = this.options.findIndex(v => v.value === this.value)
      this.$apply()
    }

    // console.log(this.options);
  }
}
</script>


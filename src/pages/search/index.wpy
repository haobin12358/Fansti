<style scoped lang="less">
  @import "../../styles/base";

  .container{
    padding: 48rpx 32rpx 0;

    .search-form{
      .form-item{
        margin-bottom: 41rpx;

        .form-item-label{
          color: @mainBlueColor;

          margin-bottom: 19rpx;
        }


        .form-item-main{
          display: flex;

          .form-item-input{
            flex: 1;

            border: 2px solid @mainBlueColor;
            border-radius: 10rpx;
            height: 74rpx;
            line-height: 74rpx;
            margin-right: 19rpx;
            color:  #5a738a;

            box-sizing: border-box;
            padding-left: 30rpx;

          }

          .form-item-btn{
            width: 144rpx;
            background: @mainYellowColor;
            color: #FFFFFF;
            height: 74rpx;
            line-height: 74rpx;

          }
        }
      }

      /*航班时刻独立布局*/
      .form-item-flight{
        .form-item-label{
          color: @mainBlueColor;

          margin-bottom: 19rpx;
        }

        .form-item-main {
          display: flex;

          .expand-main{
            flex: 1;
            display: flex;

            input{
              color: @mainBlueColor;
              border: 2px solid @mainBlueColor;
              border-radius: 10rpx;
              height: 74rpx;
              width: 200rpx;
              line-height: 74rpx;
              box-sizing: border-box;
              padding-left: 30rpx;
            }

            input:last-child{
              margin-right: 19rpx;

            }

            .flight-img{
              width: 113rpx;
              height: 33rpx;
              align-self: center;
              margin-right: 10rpx;
              margin-left: 10rpx;
            }
          }

          .form-item-btn{
            width: 144rpx;
            background: @mainYellowColor;
            color: #FFFFFF;
            height: 74rpx;
            line-height: 74rpx;

          }
        }

      }
    }
    .footer{
       text-align: center;
       margin-top: 54rpx;

       image{
         width: 131rpx;
         height: 54rpx;
       }
    }

  }
</style>

<template>
  <view wx:if="{{isBinding}}" class="container">
    <view class="search-form">
      <view class="form-item">
        <view class="form-item-label">
          DGR
        </view>

        <view class="form-item-main">
          <input class="form-item-input" @input="inputSearchHandler('dgr')" type="text"></input>
          <button class="form-item-btn"  @tap="goSearchResult('dgr')">查询</button>
        </view>
      </view>
      <view class="form-item">
        <view class="form-item-label">
          鉴定报告
        </view>
        <view class="form-item-main">
          <input class="form-item-input" type="text" value="{{surveyReport}}" @input="inputSearchHandler('surveyReport')"></input>

          <button class="form-item-btn" @tap="goSearchResult('surveyReport')">查询</button>
        </view>
      </view>
      <view class="form-item">
        <view class="form-item-label">
          北京始发TACT
        </view>

        <view class="form-item-main">
          <input class="form-item-input" type="text" value="{{tact}}" @input="inputSearchHandler('tact')"></input>

          <button class="form-item-btn" @tap="goSearchResult('tact')">查询</button>
        </view>
      </view>
      <view class="form-item">
        <view class="form-item-label">
          HS code
        </view>

        <view class="form-item-main">
          <input class="form-item-input" type="text" value="{{hsCode}}" @input="inputSearchHandler('hsCode')"/>

          <button class="form-item-btn" @tap="goSearchResult('hsCode')">查询</button>
        </view>
      </view>
      <view class="form-item">
        <view class="form-item-label">
          CAS
        </view>

        <view class="form-item-main">
          <input class="form-item-input" type="text" value="{{cas}}" @input="inputSearchHandler('cas')"></input>

          <button class="form-item-btn" @tap="goSearchResult('cas')">查询</button>
        </view>
      </view>
      <view class="form-item-flight ">
        <view class="form-item-label">
          航班时刻
        </view>

        <view class="form-item-main">
          <view class="expand-main">
            <input type="text" @input="inputSearchHandler('flightStart')" class="form-item-input "></input>
            <image class="flight-img" src="../../images/search_airplane1.png"></image>
            <input type="text" @input="inputSearchHandler('flightEnd')" class="form-item-input "></input>
          </view>
          <button class="form-item-btn" @tap="goSearchResult('flight')">查询</button>
        </view>
      </view>
    </view>
    <view class="footer" >
      <image src="../../images/paper_plane.png"></image>
    </view>
  </view>
  <placeholder wx:else></placeholder>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/api/api';
  import tip from '@/utils/tip';
  import Placeholder from '@/components/common/placeholder'
  import BindingMixin from '@/mixins/bindingMixin'


  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '查询'
    }

    components = {
      placeholder: Placeholder,
    }

    data = {
      dgr: '',
      surveyReport: '',
      tact: '',
      hsCode: '',
      cas: '',
      flightStart: '',
      flightEnd: '',

      isBinding: false,
      isOldUser:false,
      isNewUser:false,
    }

    mixins = [BindingMixin];

    computed = {}

    methods = {
      //  点击查询
     async goSearchResult(type){
        let res = {}
        switch (type){
          case 'hsCode':
            if(this.hsCode != '' ){
              res =await this.getHscode();

              if (res) {
                this.$preload('res', res);
                this.$navigate('/pages/search/hsCodeSearch');
              }
            }else{
              tip.alert('请输入查询内容')
            }
            break;
          case 'cas':
            if(this.cas != '' ){
              res =await this.getCas();

              if (res) {
                this.$preload('res', res);
                this.$navigate('/pages/search/casSearch');
              }
            }else{
              tip.alert('请输入查询内容')
            }
            break;
          case 'dgr':
            if(this.dgr != '' ){
              res =await this.getDgr();

              if (res) {
                this.$preload('res', res);
                this.$navigate('/pages/search/dgrSearch');
              }
            }else{
              tip.alert('请输入查询内容')
            }
            break;
          case 'surveyReport':
            if(this.surveyReport != '' ){
              res =await this.getJd();

              if (res) {
                this.$preload('res', res);
                this.$navigate('/pages/search/surveyReportSearch');
              }
            }else{
              tip.alert('请输入查询内容')
            }
            break;
          case 'tact':
            if(this.tact != '' ){
              res =await this.getTact();

              if (res) {
                this.$preload('res', res);
                this.$navigate('/pages/search/tcatSearch');
              }
            }else{
              tip.alert('请输入查询内容')
            }
            break;
          case 'flight':
            if(this.flightStart != '' && this.flightEnd != ''){
              res =await this.getFlyno();

              if (res) {
                this.$preload('res', res);
                this.$navigate('/pages/search/flightSearch');
              }
            }else{
              tip.alert('请输入查询内容')
            }
            break;
        }
      },

      inputSearchHandler(type, e) {
        switch (type) {
          case 'hsCode':
            this.hsCode = e.detail.value;
            break;
          case 'cas':
            this.cas = e.detail.value;
            break;
          case 'dgr':
            this.dgr = e.detail.value;
            break;
          case 'surveyReport':
            this.surveyReport = e.detail.value;
            break;
          case 'tact':
            this.tact = e.detail.value;
            break;
          case 'flightStart':
            this.flightStart = e.detail.value;
            break;
          case 'flightEnd':
            this.flightEnd = e.detail.value;
            break;
        }
      },
    }

    // dgr
    async getDgr(){
      let res = await api.getDgr({
        query: {
          login_name: wx.getStorageSync('token'),
          dgr_name: this.dgr,
          openid: wx.getStorageSync('openid')
        }
      });

      if(res.data.status == 200){
        console.log(res.data.data);
        return res.data.data;
      }else{
        tip.alert(res.data.message)
      }
    }

    // 鉴定报告
    async getJd(){
      let res = await api.getJd({
        query: {
          login_name: wx.getStorageSync('token'),
          jd_name: this.surveyReport,
          openid: wx.getStorageSync('openid')
        }
      });

      if(res.data.status == 200){
        console.log(res.data.data);
        return res.data.data;
      }else{
        tip.alert(res.data.message)
      }
    }

    async getTact(){
      let res = await api.getTact({
        query: {
          login_name: wx.getStorageSync('token'),
          tact_name: this.tact,
          openid: wx.getStorageSync('openid')
        }
      });

      if(res.data.status == 200){
        console.log(res.data.data);
        return res.data.data;
      }else{
        tip.alert(res.data.message)
      }
    }

     async getHscode(){
      let res = await api.getHs({
        query: {
          login_name: wx.getStorageSync('token'),
          hs_name: this.hsCode,
          openid: wx.getStorageSync('openid')
        }
      });

      if(res.data.status == 200){
        console.log(res.data.data);
        return res.data.data;
      }else{
        tip.alert(res.data.message)
      }
    }

    async getCas(){
      let res = await api.getCas({
        query: {
          login_name: wx.getStorageSync('token'),
          cas_name: this.cas,
          openid: wx.getStorageSync('openid')
        }
      });

      if(res.data.status == 200){
        console.log(res.data.data);
        return res.data.data;
      }else{
        tip.alert(res.data.message)
      }
    }



    async getFlyno(){
      let res = await api.getFlyno({
        query: {
          login_name: wx.getStorageSync('token'),
          openid: wx.getStorageSync('openid'),
          depa: this.flightStart,
          dest: this.flightEnd
        }
      });

      if(res.data.status == 200){
        console.log(res.data.data);
        return res.data.data;
      }else{
        tip.alert(res.data.message)
      }
    }

    events = {}

   async onLoad() {
      this.isOldUser = !!wx.getStorageSync('token');
      this.isNewUser = !!wx.getStorageSync('isNewUser');

      this.isBinding = this.isOldUser || this.isNewUser;

      // console.log(this.isOldUser,this.isNewUser,this.isBinding);
      if (!this.isBinding) {

        await this.checkBinding();

        // 绑定成功  res结果无意义就是个字符串
        console.log('新老用户', this.isOldUser, this.isNewUser);
      }
    }
  }
</script>


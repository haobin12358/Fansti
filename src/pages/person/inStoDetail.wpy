<style lang="less" scoped>
@import "../../styles/base";

.container {
  padding: 0 20rpx 100rpx;

  .detail-hd {
    color: @mainBlueColor;
    padding: 20rpx;

    .row {
      .fj();

      view {
        flex: 1;
      }
    }

  }

  .form {
    .form-item {
      padding: 20rpx;
      border-top: 1px solid #C5C5C5;
      .fj(space-between);

      &:first-child {
        border-top: none;
      }

      &.photo {
        display: block;

        .list {
          margin-top: 20rpx;
          .fj(flex-start);
          flex-wrap: wrap;

          .photo-item {
            .wl(220rpx, 220rpx);
            margin-right: 10rpx;
            margin-bottom: 10rpx;
            position: relative;

            &:nth-child(3n) {
              margin-right: 0;
            }

            .img {
              .wl(100%, 100%);
            }

            .remove {
              position: absolute;
              top: 0rpx;
              right: 0rpx;
              .wl(35rpx, 35rpx);
            }

            .info{
              position: absolute;
              left: 0;
              bottom: 0;
              .wl(100%);
              padding: 0 5rpx;
              box-sizing: border-box;

              .fj(space-between, flex-end);
              .sc(20rpx, black);
              text-shadow:-1px -1px 0px #fff;

              .time{
                flex: 1;
                margin-right: 5rpx;
              }
            }
          }
        }
      }

      .label {
        width: 160rpx;
        margin-right: 10rpx;
        color: @mainBlueColor;
      }

      .value {
        flex: 1;
        .sc(24rpx, #333333);
        /*display: flex;*/
        textarea {
          width: 100%;
        }
      }
    }
  }

  .batch-list {
    .fj();

    .batch-item {
      flex: 1;
      text-align: center;
      .type-blue-plain;
      border: 1px solid @mainBlueColor;
      .fz28;
      padding: 7rpx 0;

      &.active {
        .type-blue;
      }
    }
  }

  .hwpm-scan{
    width: 100rpx;
    height: 48rpx;
    line-height: 48rpx;
    text-align: center;
    .type-blue-plain;
    border: 1px solid @mainBlueColor;
    border-radius: 10rpx;
  }
}
</style>

<template>
  <view class="container">
    <view class="detail-hd" wx:if="{{!isNoJc}}">
      <view class="row">
        <view>进仓号
          <text style="font-weight: bold;margin-left: 28rpx;">{{formData.jcno || '暂无'}}</text>
        </view>
        <view>运单号
          <text style="font-weight: bold;margin-left: 28rpx;">{{formData.ydno || '暂无'}}</text>
        </view>
      </view>
    </view>
    <view class="batch-list" wx:if="{{inStoList.length}}">
      <view class="{{activeBatchIndex == index ? 'batch-item active' : 'batch-item'}}" wx:for="{{inStoList.length}}"
            @tap="chooseBatch({{index}})">
        {{index + 1}}
      </view>
    </view>
    <form @submit="doSubmit">
      <view class="form">
        <view class="form-item" wx:if="{{isNoJc}}">
          <view class="label">临时单号</view>
          <view class="value">
            {{formData.temporary_no}}
          </view>
        </view>
        <view class="form-item">
          <view class="label">货物品名</view>
          <view class="value" wx:if="{{!isNoJc}}">
            {{formData.hwpm || '暂无'}}
          </view>
          <view class="value" style="display: flex;align-items: center" wx:else>
            <textarea auto-height name="hwpm" style="flex: 1" value="{{formData.hwpm}}" placeholder="请输入"/>
            <view class="hwpm-scan" @tap.stop="hwpmScan">识别</view>
          </view>
        </view>
        <view class="form-item">
          <view class="label">库房存放地</view>
          <view class="value">
            <textarea placeholder="请填写" auto-height value="{{formData.warehouse_address}}"
                      name="warehouse_address"></textarea>
          </view>
        </view>
        <view class="form-item">
          <view class="label">进仓时间</view>
          <view class="value">
            <date-time-picker style="height: 20rpx" :date="formData.enter_time" name="enter_time"></date-time-picker>
          </view>
        </view>
        <view class="form-item">
          <view class="label">件数</view>
          <view class="value">
            <input placeholder="请填写" type="number" value="{{formData.goods_quantity}}" name="goods_quantity"/>
          </view>
        </view>
        <view class="form-item">
          <view class="label">送货单位</view>
          <view class="value">
            <textarea auto-height placeholder="请填写" value="{{formData.delivery_unit}}" name="delivery_unit"/>
          </view>
        </view>
        <view class="form-item">
          <view class="label">重量</view>
          <view class="value">
            <textarea auto-height placeholder="请填写" value="{{formData.goods_weight}}" name="goods_weight"/>
          </view>
        </view>
        <view class="form-item">
          <view class="label">货物尺寸</view>
          <view class="value">
            <textarea auto-height placeholder="请填写" value="{{formData.cargo_size}}" name="cargo_size"/>
          </view>
        </view>
        <view class="form-item">
          <view class="label">客户名称</view>
          <view class="value">
            <textarea auto-height placeholder="请填写" value="{{formData.client_name}}" name="client_name"/>
          </view>
        </view>
        <view class="form-item">
          <view class="label">备注</view>
          <view class="value">
            <textarea auto-height placeholder="请填写" value="{{formData.remark}}" name="remark"/>
          </view>
        </view>
        <view wx:if="{{!isAddNoJc}}" class="form-item photo" style="padding: 20rpx 0">
          <view class="label" style="padding-left: 20rpx">入仓照片</view>
          <view class="list">
            <view wx:for="{{picture}}" @tap="previewImage({{index}})" class="photo-item">
              <image class="img" src="{{item.photourl}}"></image>
              <image class="remove" src="../../images/remove.png" @tap.stop="removePhoto({{index}})"></image>

              <view class="info">
                <view class="time">{{item.createtime}}</view>
                <view >{{item.czr}}</view>
              </view>
            </view>

            <image src="../../images/plus.png" class="photo-item" @tap="addPhoto"></image>
          </view>
        </view>
      </view>

      <view class="btn-wrap">
        <button wx:if="{{!isAddNoJc}}" class="button plain" @tap="goPrint">打印面单</button>
        <button class="button" form-type="submit">保 存</button>
      </view>
    </form>
  </view>
</template>

<script>
import wepy from 'wepy';
import api from '@/api/api';
import tip from '@/utils/tip';
import DateTimePicker from '@/components/dateTimePicker';


export default class InStoDetail extends wepy.page {
  config = {
    navigationBarTitleText: '入库明细'
  };

  components = {
    'date-time-picker': DateTimePicker
  };

  data = {
    isNoJc: false,
    date: '',
    activeBatchIndex: 0,
    inStoList: [],
    picture: [],
    formData: {}
  };

  computed = {
    isAddNoJc(){
      return this.isNoJc && !this.formData.temporary_no
    }
  };

  methods = {
    goPrint() {
      this.$preload('res', this.formData);
      this.$preload('isNoJc', this.isNoJc);
      this.$navigate('/pages/operation/print');
    },
    chooseBatch(index) {
      this.activeBatchIndex = index;
      this.formData = this.inStoList[this.activeBatchIndex];
      this.picture = this.formData.pic_list;
      this.$apply();
    },
    addPhoto() {
      let that = this;

      wx.chooseImage({
        success({ tempFiles }) {
          let filterFiles = tempFiles.filter(item => item.size < 5 * 1024 * 1024);

          if (filterFiles.length != tempFiles.length) {
            tip.confirm(`有${tempFiles.length - filterFiles.length}张照片过大(5MB),继续上传?`).then(
              () => {
                that.afterChoose(filterFiles);
              }
            );
          } else {
            that.afterChoose(filterFiles);
          }
        }
      });
    },
    doSubmit(evt) {
      let formData = evt.detail.value;

      let checkRst = this.checkFormData(formData);

      if (checkRst) {
        tip.alert(checkRst);
        return;
      }

      formData.hwpm = formData.hwpm ? formData.hwpm : this.formData.hwpm;
      formData.enter_time += ':00';
      formData.pic_list = this.picture.map(v => {
        return {
          id: v.id,
          photourl: v.photourl,
          filename: v.filename,
          url: v.photourl
        };
      });
      formData.receiver_name = '';
      formData = {
        ...this.formData,
        ...formData
      };

      this.isNoJc ? this.saveNoJcInSto(formData) : this.saveInSto(formData);
    },

    removePhoto(index) {
      let removeItem = this.picture[index]
      let loginName = wx.getStorageSync('token')

      if(removeItem.czr && removeItem.czr !== loginName) {
        tip.toast('无法删除他人上传的内容')
        return
      }
      this.picture.splice(index, 1);
    },
    previewImage(index) {
      let urls = this.picture.map(item => item.photourl);

      wx.previewImage({
        current: urls[index],
        urls
      });
    },
    hwpmScan(){
      let that = this;

      tip.loading();
      wx.chooseImage({
        count: 1,
        success({ tempFilePaths }) {
          let path = tempFilePaths[0]

          wx.uploadFile({
            url: api.picOcrUrl,
            filePath: path,
            name: 'file',
            header: {
              'Content-Type': 'multipart/form-data'
            },
            success: function(res) {
              let resData = JSON.parse(res.data);
              let data = resData.data;

              if (resData.status === 200) {
                tip.success('识别成功')
                that.formData.hwpm += data.map(v => v.words).join(' ')
                that.$apply()
              }else {
                tip.error('识别失败')
              }
            }
          })
        },
        fail(){
          tip.loaded()
        }
      })
    }
  };

  saveInSto(formData) {
    api.addIn({
      method: 'POST',
      jcno: this.formData.jcno,
      login_name: wx.getStorageSync('token'),
      query: formData
    }).then(
      res => {
        if (res.data.status == 200) {
          let data = res.data.data;

          this.inStoList.splice(this.activeBatchIndex, 1, formData);
          this.$apply();
          tip.success('保存成功');
        } else {
          tip.alert(res.data.message);
        }
      }
    );
  }

  saveNoJcInSto(formData) {
    api.updateNojcno({
      method: 'POST',
      temporary_no: this.formData.temporary_no,
      login_name: wx.getStorageSync('token'),
      query: formData
    }).then(
      res => {
        if (res.data.status == 200) {
          let data = res.data.data;

          tip.success('保存成功').then(
            () => {
              wx.navigateBack();
            }
          );
        } else {
          tip.alert(res.data.message);
        }
      }
    );
  }

  afterChoose(filterFiles) {
    let that = this;
    let proms = filterFiles.map(i => that.uploadFiles(i));

    Promise.all(proms).then(
      rsts => {
        let succCount = rsts.filter(i => i).length,
          failCount = rsts.length - succCount;

        tip.toast(`成功上传${succCount}张,失败${failCount}张`);
      }
    );
  }

  uploadFiles(file) {
    let that = this;

    let formData = {
      FileType: 'in',
      index: that.picture.length + 1,
      photo_head: that.isNoJc ? 1 : that.formData.photo_head
    }

    if(this.isNoJc) {
      formData.temporary_no = this.formData.temporary_no
    }else {
      formData.jcno = this.formData.jcno
    }

    tip.loading();
    return new Promise(
      (resolve, reject) => {
        wx.uploadFile({
          url: api.uploadFilesUrl,
          filePath: file.path,
          name: 'file',
          header: {
            'Content-Type': 'multipart/form-data'
          },
          formData: formData,
          success: function(res) {
            let resData = JSON.parse(res.data);
            let data = resData.data;

            if (resData.status === 200) {
              that.picture.push({
                photourl: data,
                filename: Date.now().toString() + data.substr(data.lastIndexOf('.'))
              });
              that.$apply();
              resolve(true);
            } else {
              resolve(false);
            }
          },
          fail: function() {
            reject(false);
          },
          complete: function() {
            wx.hideLoading();
          }
        });
      }
    );

  }

  checkFormData(formData) {
    let rst = '';

    if (this.isNoJc && !formData.hwpm) {
      rst = '请填货物品名';
      return rst;
    }
    if (!formData.warehouse_address) {
      rst = '请填库房存放地';
      return rst;
    }
    if (!formData.enter_time) {
      rst = '请选择进仓时间';
      return rst;
    }
    if (!formData.goods_quantity) {
      rst = '请填写件数';
      return rst;
    }
    /*if (!formData.delivery_unit) {
      rst = '请填写送货单位'
      return rst
    }*/
    if (!formData.goods_weight) {
      rst = '请填写重量';
      return rst;
    }
    if (!formData.cargo_size) {
      rst = '请填写货物尺寸';
      return rst;
    }
    /*if (!formData.client_name) {
      rst = '请填写客户名称'
      return rst
    }
    if (!formData.remark) {
      rst = '请填写备注'
      return rst
    }*/
    /*if (!this.picture.length) {
      rst = '请上传入仓照片'
      return rst
    }*/

    return '';
  }

  onLoad(params, data) {
    if (data.preload.isNoJc) {
      this.isNoJc = true;
      this.formData = data.preload.item || {};
      this.picture = this.formData.pic_list || [];
    } else {
      this.inStoList = data.preload.res;
      this.formData = this.inStoList[this.activeBatchIndex];
      this.picture = this.formData.pic_list || [];
    }
    this.$apply();
  }
}
</script>

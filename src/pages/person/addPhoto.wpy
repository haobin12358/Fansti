<style lang="less" scoped>
  @import "../../styles/base";

  .container {
    padding: 35rpx;

    .container-hd{
      color: @mainBlueColor;
      margin-bottom: 20rpx;
    }

    .choose-batch{
      border: 1px solid @mainBlueColor;
      padding: 5rpx 20rpx;
      .fj();
      margin: 20rpx 0;

      .hd{
        margin-right: 20rpx;
        color: @mainBlueColor;
      }

      .bd{
        flex: 1;
        color: #999999;
      }

      .ft{
        .wl(10rpx, 20rpx);
        transform: rotate(90deg);
      }
    }

    .choose-photo{
      .fj(flex-start);
      flex-wrap: wrap;
      .add-photo-block{
        .wl(220rpx, 220rpx);
      }
      .photo-item{
        .wl(220rpx, 220rpx);
        margin-right: 10rpx;
        margin-bottom: 10rpx;
        position: relative;

        &:nth-child(3n){
          margin-right: 0;
        }

        .img{
          .wl(100%, 100%);
        }

        .remove{
          position: absolute;
          top: 0rpx;
          right: 0rpx;
          .wl(35rpx, 35rpx);
        }

        .info{
          position: absolute;
          left: 0;
          bottom: 0;
          .wl(100%);
          padding: 0 5rpx;
          box-sizing: border-box;

          .fj(space-between, flex-end);
          .sc(20rpx, black);
          text-shadow:1px 1px 0px #fff;

          .time{
            flex: 1;
            margin-right: 5rpx;
            /*min-width: 100%;*/
            /*text-align: right;*/
          }
        }
      }


    }
  }
</style>

<template>
  <view class="container">
    <view class="container-hd">
      进仓号: {{jcno}}
    </view>
    <picker wx:if="{{type == 'in'}}" @change="handleBatchChange" value="{{batchIndex}}" range="{{batchList}}">
      <view class="choose-batch">
        <view class="hd">批次</view>
        <view class="bd">
          {{batchList[batchIndex]}}
        </view>
        <image class="ft" src="../../images/index_arrow.png"></image>
      </view>
    </picker>

    <view class="choose-photo">
      <view class="photo-item" wx:for="{{list}}">
        <image class="img" src="{{item.photourl}}" @tap.stop="previewImg({{item}})"></image>

        <image class="remove" src="../../images/remove.png" @tap.stop="removePhoto({{item}})"></image>
        <view class="info">
          <view class="time">{{item.createtime}}</view>
          <view >{{item.czr}}</view>
        </view>
      </view>

      <image src="../../images/plus.png" class="add-photo-block" @tap="addPhoto"></image>

    </view>

    <!--<view class="btn-wrap">
      <view class="button" @tap="removeCheckedImgs">删除</view>
    </view>-->
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip';

  export default class AddPhoto extends wepy.page {
    config = {};

    components = {};

    data = {
      type: 'in',
      jcno: '',

      batchIndex: '',
      batchList: [],
      list: []
    };

    computed = {};

    methods = {
      previewImg(item){
        let photoUrls = this.list.map(item => item.photourl)

        wx.previewImage({
          urls: photoUrls,
          current: photoUrls
        })
      },

      handleBatchChange(evt){
        this.batchIndex= evt.detail.value
        this.getInPhotoList()
      },
      removePhoto(item){
        tip.alert('删除照片')
      },
      addPhoto(){
        tip.alert('上传照片')
        return
        let that = this

        wx.chooseImage({
          count: 1,
          success({tempFilePaths}) {
            wx.uploadFile({
              url: api.uploadFilesUrl,
              filePath: tempFilePaths[0],
              name: 'file',
              formData: {
                FileType: that.type,
                index: that.list.length + 1,
                jcno: that.jcno
              }
            })
          }
        })
      },

      /*
      chooseToRemove(index){
        console.log(index)
        this.list[index].checked = !this.list[index].checked
      },
      removeCheckedImgs(){
        let ids = this.list.filter(item => item.checked).map(item => item.url)

        console.log(ids)
        tip.confirm(`确认删除${ids.length}张照片?`).then(
          ()=>{
            tip.success('删除成功!')
          }
        )
      }*/
    };

    // 入仓照片 获取批次并显示该批次(选中最新一次)下的照片
    getBatchList(){
      api.getJcInPhotoHead({
        query: {
          login_name: wx.getStorageSync('token'),
          jcno: this.jcno,
        }
      }).then(
        res => {
          if(res.data.status == 200){
            let data = res.data.data

            this.batchList = data
            this.batchIndex = data.length - 1
            this.$apply()

            this.getInPhotoList()
          }
        }
      )
    }
    getInPhotoList(){
      api.getJcPicIn({
        query: {
          login_name: wx.getStorageSync('token'),
          jcno: this.jcno,
          photo_head: this.batchList[this.batchIndex]
        }
      }).then(
        res => {
          if(res.data.status == 200){
            let data = res.data.data

            this.list = data
            this.$apply()
          }
        }
      )
    }

    getPhotoList(){
      api.getJcPic({
        query: {
          login_name: wx.getStorageSync('token'),
          jcno: this.jcno,
        }
      }).then(
        res => {
          if(res.data.status == 200){
            let data = res.data.data
            let photoObj = data[this.type]

            this.list = photoObj.picture.map(item => {
              return {
                photourl: item,
                czr: photoObj.czr,
                createtime: photoObj.createtime
              }
            })
            this.$apply()
          }
        }
      )
    }


    onLoad(parmas) {
      this.jcno = parmas.jcno
      this.type = parmas.type

      if(this.type == 'in'){
        this.getBatchList()
      }else {
        this.getPhotoList()
      }
    };
  }
</script>

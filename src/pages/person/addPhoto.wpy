<style lang="less" scoped>
  @import "../../styles/base";

  .container {
    padding: 35rpx;

    .container-hd{
      color: @mainBlueColor;
      margin-bottom: 20rpx;
    }

    .choose-batch{
      border: 1px solid @mainBlueColor;
      padding: 5rpx 20rpx;
      .fj();
      margin: 20rpx 0;

      .hd{
        margin-right: 20rpx;
        color: @mainBlueColor;
      }

      .bd{
        flex: 1;
        color: #999999;
      }

      .ft{
        .wl(10rpx, 20rpx);
        transform: rotate(90deg);
      }
    }

    .choose-photo{
      .fj(flex-start);
      flex-wrap: wrap;
      .add-photo-block{
        .wl(220rpx, 220rpx);
      }
      .photo-item{
        .wl(220rpx, 220rpx);
        margin-right: 10rpx;
        margin-bottom: 10rpx;
        position: relative;

        &:nth-child(3n){
          margin-right: 0;
        }

        .img{
          .wl(100%, 100%);
        }

        .remove{
          position: absolute;
          top: 0rpx;
          right: 0rpx;
          .wl(35rpx, 35rpx);
        }

        .info{
          position: absolute;
          left: 0;
          bottom: 0;
          .wl(100%);
          padding: 0 5rpx;
          box-sizing: border-box;

          .fj(space-between, flex-end);
          .sc(20rpx, black);
          text-shadow:0px -1px 0px #fff;

          .time{
            flex: 1;
            margin-right: 5rpx;
            /*min-width: 100%;*/
            /*text-align: right;*/
          }
        }
      }


    }

    .video-wrap{
      position: fixed;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 500rpx;
      border-top: 1px solid #C5C5C5;
      /*background: black;*/

      &-close{
        height: 50rpx;
        line-height: 50rpx;
        color: #999999;
        text-align: center;
      }

      video{
        width: 100%;
        height: 420rpx ;
      }
    }
  }
</style>

<template>
  <view class="container">
    <view class="container-hd">
      进仓号: {{jcno}}
    </view>
    <picker wx:if="{{type == 'in'}}" @change="handleBatchChange" value="{{batchIndex}}" range="{{batchList}}">
      <view class="choose-batch">
        <view class="hd">批次</view>
        <view class="bd">
          {{batchList[batchIndex]}}
        </view>
        <image class="ft" src="../../images/index_arrow.png"></image>
      </view>
    </picker>

    <view class="choose-photo">
      <view class="photo-item" wx:for="{{list}}">
        <image wx:if="{{type === 'packing'}}" class="img" src="../../images/play.png" @tap.stop="previewVideo({{item.photourl}})"></image>
        <image wx:else class="img" src="{{item.photourl}}" @tap.stop="previewImg({{item.photourl}})"></image>

        <image class="remove" src="../../images/remove.png" @tap.stop="removePhoto({{item}})"></image>
        <view class="info">
          <view class="time">{{item.createtime}}</view>
          <view >{{item.czr}}</view>
        </view>
      </view>

      <image wx:if="{{type != 'in' || batchIndex == batchList.length - 1}}" src="../../images/plus.png"
             class="add-photo-block" @tap="newAddPhoto"></image>
    </view>


    <view wx:if="{{videoSrc}}" class="video-wrap">
      <view class="video-wrap-close" @tap="hideVideoPreview">收起视频预览</view>
      <video src="{{videoSrc}}"></video>
    </view>

    <!--<view class="btn-wrap">
      <view class="button" @tap="removeCheckedImgs">删除</view>
    </view>-->
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip';
  import { promiseQueue } from '@/utils/util';


  export default class AddPhoto extends wepy.page {
    config = {};

    components = {};

    data = {
      type: 'in',
      jcno: '',

      batchIndex: '',
      batchList: [],
      list: [],

      videoSrc: ''
    };

    computed = {};

    methods = {
      previewImg(item){
        let photoUrls = this.list.map(item => item.photourl)

        wx.previewImage({
          urls: photoUrls,
          current: item
        })
      },
      previewVideo(url) {
        this.videoSrc = url
        this.$apply()
      },
      hideVideoPreview(){
        this.videoSrc = ''
        this.$apply()
      },

      handleBatchChange(evt){
        this.batchIndex= evt.detail.value
        this.getInPhotoList()
      },
      removePhoto(item){
        let that = this

        tip.confirm('确认删除该图?').then(
          ()=>{
            api.deleteFile({
              method: 'POST',
              jcno: that.jcno,
              login_name: wx.getStorageSync('token'),
              file_type: that.type,
              query: {
                photourl: item.photourl,
                file_name: item.filename
              }
            }).then(
              res => {
                if (res.data.status == 200) {
                  if(this.type == 'in'){
                    this.getInPhotoList()
                  }else {
                    this.getPhotoList()
                  }
                }
              }
            )
          }
        )
      },
      newAddPhoto(){
        let that = this

        if(this.type !== 'packing') {
          wx.chooseImage({
            success: function({tempFiles}){
              let filterFiles = tempFiles.filter(item => item.size < 5 * 1024 * 1024)

              if(filterFiles.length != tempFiles.length){
                tip.confirm(`有${tempFiles.length - filterFiles.length}张照片过大(5MB),继续上传?`).then(
                  () => {
                    that.afterChoose(filterFiles)
                  }
                )
              }else{
                that.afterChoose(filterFiles)
              }
            }
          })
        }else {
          wx.chooseVideo({
            success({tempFilePath, size}) {
              /*wx.openVideoEditor({
                filePath: tempFilePath
              })*/
              console.log(tempFilePath);
              that.afterChoose([tempFilePath])
            }
          })
        }
      },
    };
    afterChoose(filterFiles){
      let that = this
      let proms = filterFiles.map(i => that.uploadFiles(i))

      Promise.all(proms).then(
        rsts => {
          let uploadedFile = rsts.filter(i => i)
          let newProms = uploadedFile.map(i => that.addNewFile(i))

          if(!uploadedFile.length){
            // tip.loaded()
            tip.toast('上传失败')
          }
          promiseQueue(newProms).then(
            newRsts => {
              let succCount = newRsts.filter(i => i).length,
                failCount = filterFiles.length - succCount

              tip.toast(`成功上传${succCount}张,失败${failCount}张`, ()=>{
                if(that.type == 'in'){
                  this.getInPhotoList()
                }else {
                  that.getPhotoList()
                }
              })
            }
          )
        }
      )
    }
    uploadFiles(file){
      let that = this
      let filePath = typeof file === 'string' ? file : file.path


      tip.loading()
      return new Promise(
        (resolve, reject) => {
          wx.uploadFile({
            url: api.uploadFilesUrl,
            filePath: filePath,
            name: 'file',
            header: {
              "Content-Type": "multipart/form-data"
            },
            formData: {
              FileType: that.type,
              index: that.list.length + 1,
              jcno: that.jcno,
              photo_head: that.batchIndex
            },
            success: function(res) {
              let resData = JSON.parse(res.data)

              console.log(resData);
              if(resData.status !== 200){
                resolve(false)
              }else{
                let data = resData.data
                let fileName =  Date.now().toString() + data.substr(data.lastIndexOf('.'))

                resolve({
                  url: data,
                  file_name: fileName
                })
              }
            },
            fail: function(){
              resolve(false)
            },
          })
        }
      )
    }
    addNewFile(params){
      let that = this

      return () => new Promise((resolve, reject) => {
        api.addNewFile({
          method: 'POST',
          jcno: that.jcno,
          login_name: wx.getStorageSync('token'),
          file_type: that.type,
          query: {
            url: params.url,
            file_name: params['file_name'],
            head: that.type == 'in' ? that.batchList[that.batchIndex] : ''
          }
        }).then(
          res => {
            if (res.data.status == 200) {
              resolve(true)
            }else {
              reject(false);
            }
          }
        )
      })
    }


    // 入仓照片 获取批次并显示该批次(选中最新一次)下的照片
    getBatchList(){
      api.getJcInPhotoHead({
        query: {
          login_name: wx.getStorageSync('token'),
          jcno: this.jcno,
        }
      }).then(
        res => {
          if(res.data.status == 200){
            let data = res.data.data

            this.batchList = data
            this.batchIndex = data.length - 1
            this.$apply()

            this.getInPhotoList()
          }
        }
      )
    }
    getInPhotoList(){
      api.getJcPicIn({
        query: {
          login_name: wx.getStorageSync('token'),
          jcno: this.jcno,
          photo_head: this.batchList[this.batchIndex]
        }
      }).then(
        res => {
          if(res.data.status == 200){
            let data = res.data.data

            this.list = data
            this.$apply()
          }
        }
      )
    }

    getPhotoList(){
      api.getJcPicNew({
        query: {
          login_name: wx.getStorageSync('token'),
          jcno: this.jcno,
        }
      }).then(
        res => {
          if(res.data.status == 200){
            let data = res.data.data
            let photoObj = data[this.type]

            this.list = photoObj
            this.$apply()
          }
        }
      )
    }


    onLoad(parmas) {
      // todo
      this.jcno = parmas.jcno || 'E15060029'
      this.type = parmas.type || 'packing'

      if(this.type == 'in'){
        this.getBatchList()
      }else {
        this.getPhotoList()
      }
    };
  }
</script>

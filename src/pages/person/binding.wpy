<style scoped lang="less">
  @import "../../styles/base";

  .container{
    background: linear-gradient(to top,@mainBlueColor, #FFFFFF);

    display: flex;
    flex-direction: column;

    .container-hd{
      height: 240rpx;
      text-align: right;
      padding-top: 46rpx;
      padding-right: 65rpx;

      image{
        height: 109rpx;
        width: 262rpx;
      }
    }

    .container-bd {
      .form-list{

        .form-item{
          height: 121rpx;
          padding-left: 75rpx;
          border-bottom: 1px solid #e9e9e9;

          display: flex;
          align-items: center;

          .form-item-hd{
            margin-right: 40rpx;
            display: flex;
            align-items: center;

            image{
              width: 32rpx;
              height: 35rpx;
            }
          }
          .form-item-bd{
            flex: 1;

            input{

            }

            .input-placeholder{
              color: @mainBlueColor;
            }
          }
        }
      }

    }

    .container-ft{
      flex: 1;

      display: flex;
      flex-direction: column;
      justify-content: center;

      .confirm-btn{
        width: 680rpx;
        height: 80rpx;
        line-height: 80rpx;
        border-radius: 40rpx;
        box-shadow: 2rpx 2rpx 1rpx rgba(58,82,102,.75);
        background: @mainBlueColor;
        color: #FFFFFF;

        .fz38();
      }
    }


  }

  .authorize-userinfo{
    position: fixed;
    left: 225rpx;
    top: 500rpx;
    width: 300rpx;
    height: 200rpx;
    background: #a1afba;
    z-index: 100;
  }
</style>

<template>
  <form @submit="formSubmit">
    <view bindsubmit="formSubmit" class="container" style="height: {{containerHeight}}px;">
      <view class="container-hd">
        <image src="../../images/paper_plane.png"></image>
      </view>
      <view class="container-bd">
        <view class="form-list">
          <view class="form-item">
            <view class="form-item-hd">
              <image src="../../images/people.png"></image>
            </view>
            <view class="form-item-bd">
              <input type="text" name="username" placeholder="请输入用户名(选填)"/>
            </view>
          </view>

          <view class="form-item">
            <view class="form-item-hd">
              <image src="../../images/lock.png"></image>
            </view>
            <view class="form-item-bd">
              <input type="text" name="password" password="true" placeholder="请输入密码(选填)"/>
            </view>
          </view>

          <view class="form-item">
            <view class="form-item-hd">
              <image src="../../images/phone.png"></image>
            </view>
            <view class="form-item-bd">
              <input type="text" name="phone" type="number" placeholder="请输入手机号码（绑定本微信的手机号）"/>
            </view>
          </view>
        </view>
      </view>
      <view class="container-ft">
        <button class="confirm-btn" form-type="submit">绑 定</button>
      </view>
    </view>
  </form>
  <userinfoAuthorize :showPopup.sync="showPopup" @getUserInfo.user="getUserInfo"></userinfoAuthorize>

</template>

<script>
  import wepy from 'wepy';
  import UserinfoAuthorize from '@/components/userinfoAuthorize';
  import CardMixin from '@/mixins/cardMixin';
  import BindingMixin from '@/mixins/bindingMixin';
  import api from '@/api/api';
  import tip from '@/utils/tip';

  export default class Binding extends wepy.page {
    config = {
      navigationBarTitleText: '泛思特'
    }

    components = {
      userinfoAuthorize: UserinfoAuthorize,
    };

    mixins = [CardMixin,BindingMixin];

    data = {
      userInfo: {},
      showPopup: false
    };
    computed = {};

    methods = {
      async formSubmit(e) {
        let formData = e.detail.value;
        await this.setOpenid();

        if(wx.getStorageSync('openid')){
          if(formData.username && formData.password && formData.phone){
            tip.alert('老用户绑定');

            this.doBinding(formData);
          }else if (!formData.username && !formData.password && formData.phone) {
            tip.alert('新用户绑定');

            this.doBinding(formData);
          }
          else{
            tip.alert('请填写完整')
          }
        }else{
          tip.confirm('应用出了点小问题,建议重新进入应用后再尝试',false);
        }
      },

      getUserInfo(e){
        this.userInfo = e.detail.userInfo;
      }
    };

    async doBinding(params){
      let query= {
        phone: params.phone,
        openid: wx.getStorageSync('openid'),
        name: this.userInfo.nickName,
        usex: this.userInfo.gender == 1 ?'男':'女' ,
        city: this.userInfo.city,
        province: this.userInfo.province,
      }
      //  老用户
      if (params.username && params.password) {
        query = Object.assign(query,{
          login_name: params.username,
          login_password: params.password
        })
      }
      let res =await api.userBinding({method: 'POST', query});

      // 绑定成功,清空数据,在几个首页触发自动登录
      if(res.data.status == 200){
        wx.setStorageSync('isNewUser', false);
        wx.setStorageSync('token', '');
        wx.reLaunch({
          url: '/pages/index/index'
        });
      }else{
        tip.alert(res.data.message)
      }
    }

    events = {};

    onLoad() {
      let that = this

      wx.getUserInfo({
        success: res => {
          this.userInfo = res.userInfo;
          console.log(res);
          that.$apply();

        },
        fail: res => {
          that.showPopup = true;
          that.$apply();
        }
      });
    }
  }
</script>


<style scoped lang="less">
  @import "../../styles/base";

  .container {
    padding-top: 160rpx;

    .fix-top {
      position: fixed;
      top: 0;
      left: 0;
      z-index: 10;
      width: 100%;
      background: #FFFFFF;

      .search-bar {
        width: 100%;
        padding: 19rpx;
        box-sizing: border-box;
        display: flex;
        align-items: center;

        .search-bar-bd {
          flex: 1;

          border: 1rpx solid @borderColor;
          margin-right: 20rpx;
          border-radius: 10rpx;
          padding-left: 10rpx;
          box-sizing: border-box;

          display: flex;
          /*align-items: center;*/

          .classify {
            margin-right: 20rpx;
            display: flex;
            align-items: center;
            /*padding-top: 10rpx;*/
            height: 53rpx;

            .classify-checkbox {
              margin-right: 10rpx;
              color: @mainBlueColor;
            }
            .classify-label {
              /*align-self: baseline;*/
              width: 23rpx;
              height: 23rpx;
            }
          }

          .search-bar-input {
            flex: 1;
            color: @mainFontColor;
          }
        }
        .search-bar-ft {
          padding: 0 20rpx;
          border-radius: 10rpx;
          height: 2.37em;
          line-height: 2.37em;
          .fz24();
          .type-yellow();
        }

      }

      .progress-chart {
        width: 100%;
        display: flex;

        .progress-item {
          flex: 1;
          color: @mainBlueColor;
          background: @mainYellowColor;
          text-align: center;
          height: 51rpx;
          line-height: 51rpx;
          border-right: 1px solid #ffffff;

          .fz26();

          &:last-child {
            border-right: 0px;
          }
        }
      }

    }

    .container-bd {

    }
  }
</style>

<template>
  <block wx:if="{{isOldUser}}">
    <view class="container">
      <view class="fix-top">
        <view class="search-bar">
          <!--search-bar-->
          <view class="search-bar-bd">
            <picker bindchange="searchPickerChange" value="{{searchPickerIndex}}" range="{{searchPickerArray}}">
              <view class="classify">
                <view class="classify-checkbox">
                  {{searchPickerArray[searchPickerIndex]}}
                </view>
                <image src="../../images/arrow_down.jpg" class="classify-label"></image>
              </view>
            </picker>
            <input class="search-bar-input" type="text" placeholder="请输入{{searchPickerArray[searchPickerIndex]}}"
                   @input="searchBarInput">
          </view>
          <view class="search-bar-ft" @tap="doSearch">查询</view>
        </view>
        <view class="progress-chart">
          <view class="progress-item" wx:for="{{progressData}}" wx:key="*this">
            {{item}}
          </view>
        </view>
      </view>

      <view class="container-bd">
        <freight-consignment-list :list.sync="goodsList" @tapItem.user="goConsignmentDetail"></freight-consignment-list>
      </view>
    </view>
    <load-more :type.sync="loadingType"></load-more>
  </block>
  <block wx:elif="{{isNewUser}}">
    <placeholder1 :type="type"></placeholder1>
  </block>
  <placeholder2 wx:else></placeholder2>
</template>

<script>
  import wepy from 'wepy';
  import Placeholder from '@/components/common/placeholder';
  import LoadMore from '@/components/common/loadMore';
  import FreightConsignmentList from '@/components/freightConsignmentList';
  import api from '@/api/api';
  import tip from '@/utils/tip';
  import BindingMixin from '@/mixins/bindingMixin';


  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '跟踪'
    };

    mixins = [BindingMixin];

    components = {
      placeholder1: Placeholder,
      placeholder2: Placeholder,
      'freight-consignment-list': FreightConsignmentList,
      'load-more': LoadMore
    };

    data = {
      type: 'newUser',

      searchPickerArray: ['运单号', '订单号', '目的港'],
      searchPickerIndex: 0,
      searchContent: '',
      progressData: ['预配', '进仓', '出仓', '称重', '报关', '运单', '交单', '起飞', '送达'],

      goodsList: [],
      pageNum: 1,
      pageSize: 15,

      loadingType: 'normal', // 加载状态

      isBinding: false,
      isOldUser: false,
      isNewUser: false
    };
    computed = {};

    methods = {
      doSearch() {
        this.getGoodsList(true);
      },
      searchBarInput({ detail: { value } }) {
        this.searchContent = value;
      },
      searchPickerChange({ detail: { value } }) {
        this.searchPickerIndex = value;
      },
      goConsignmentDetail(jcno) {
        this.$navigate('/pages/track/consignmentDetail', { jcno });
      }
    };

    async getGoodsList(replace = false) {
      this.loadingType = 'loading';
      this.$apply();
      let searchParam = {};
      if (replace) {
        this.pageNum = 1;
        switch (this.searchPickerIndex + '') {
          case '0':
            searchParam = { ydno: this.searchContent };
            break;
          case '1':
            searchParam = { hxno: this.searchContent };
            break;
          case '2':
            searchParam = { destination: this.searchContent };
            break;
        }
      }
      console.log('searchParam', searchParam);
      // return
      let res = await api.getGoodsList({
        _noLoading: true,
        query: {
          page_num: this.pageNum,
          page_size: this.pageSize,
          login_name: wx.getStorageSync('token'),
          ...searchParam
        }
      });

      if (res.data.status == 200) {
        // this.goodsList= res.data.data.filter(x => x.jcno == 'E18030634')
        if(replace){
          this.goodsList = res.data.data;
        }else{
          this.goodsList = [...this.goodsList, ...res.data.data];
        }


        if (res.data.data.length == this.pageSize) {
          this.loadingType = 'normal';
        } else {
          this.loadingType = 'nomore';
        }
        this.pageNum++;
        this.$apply();
      } else {
        tip.alert(res.data.message);
      }
    }

    onReachBottom() {
      if (this.isOldUser && this.loadingType != 'nomore') {
        this.getGoodsList();
      }
    }

    watch = {};

    events = {};

    init() {

    }

    async onLoad() {
      console.log('track load');
      this.isOldUser = !!wx.getStorageSync('token');
      this.isNewUser = !!wx.getStorageSync('isNewUser');

      this.isBinding = this.isOldUser || this.isNewUser;
      //  只需要在onload中判断 及 进行自动登录   这样可以将这些代码写在mixin的onload中了
      if (!this.isBinding) {

        await this.checkBinding();

        // 绑定成功  res结果无意义就是个字符串
        console.log('新老用户', this.isOldUser, this.isNewUser);
      }

      console.log(this.isOldUser, this.isNewUser);
      if (this.isOldUser) {
        this.getGoodsList();
      }
    }
  }
</script>


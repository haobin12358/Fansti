<style scoped lang="less">
</style>

<template>

</template>

<script>
  import wepy from 'wepy';
  import api from '../api/api';
  import tip from '../utils/tip';

  export default class BindingMixin extends wepy.mixin {

    data = {
      openid: '',

      isBinding: false,
      isOldUser:false,
      isNewUser:false,
    };

    computed = {};

    methods = {};

    events = {};

    onLoad(){
      this.isOldUser = !!wx.getStorageSync('token');
      this.isNewUser = !!wx.getStorageSync('isNewUser');

      this.isBinding = this.isOldUser || this.isNewUser;
    };

    async checkBinding() {
      let openid = wx.getStorageSync('openid');
      let res2 = await api.getBinding({ query: { openid } });

      if (res2.data.status == 200) {
        //  新老用户
        if (res2.data.message == '已绑定') {
          this.isBinding = true;

          wx.setStorageSync('userType', res2.data.data.user_type);
          //  老用户
          if (res2.data.data.login_name) {
            //  老用户直接绑定token
            if (!wx.getStorageSync('token')) {
              wx.setStorageSync('token', res2.data.data.login_name);
            }
            this.isOldUser = true;
          } else {
            wx.setStorageSync('isNewUser', true);
            this.isNewUser = true;
          }
        }
        this.$apply();

        console.group('now');
        console.log(wx.getStorageSync('token'), wx.getStorageSync('isNewUser'));
        console.groupEnd('now');

        return 'over';
      } else {
        // tip.error(res2.data.message);
      }

    }

    //  缓存code,openid
    async setOpenid() {
      if (wx.getStorageSync('code') == '' || wx.getStorageSync('openid') == '') {
        let { code } = await wepy.login();
        wx.setStorageSync('code', code);

        let res = await api.getOpenid({ query: { code } });
        let openid = res.data.data.openid;
        wx.setStorageSync('openid', openid);
        console.log('[code openid] 已缓存');
      }
    }

  }
</script>

